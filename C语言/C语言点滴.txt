【1】％d整型输出，％ld长整型输出，
％o以八进制数形式输出整数，
％x以十六进制数形式输出整数，或输出字符串的地址。
％u以十进制数输出unsigned型数据(无符号数)。注意：%d与%u有无符号的数值范围，也就是极限的值，不然数值打印出来会有误。
％c用来输出一个字符，
％s用来输出一个字符串用“”来输入字符串，
％f用来输出实数，以小数形式输出，默认情况下保留小数点6位。
%.100f用来输出实数，保留小数点100位。
％e以指数形式输出实数，
％g根据大小自动选f格式或e格式，且不输出无意义的零。
%u  printf()函数使用%u说明显示unsigned int 类型值。

【2】scanf（“%d,%d”,&a,&b）;时输入格式1,2
scanf（“%d %d”,&a,&b）或scanf（"%d%d",&a,&b）输入格式1 2

【3】c语言中%d与%4d的区别？
测试%d与%4d的区别,%d是按照原型输出，有多少位就有多少位。比如%4d就表示数据宽度为4，不够的那空格来补，如果超出四位，则应该原型输出。
【4】pow(x,y)表示x的y次方
【5】float 最多精确6位有效数字（结果%f）。double 精确整数部分11位，小数部分6位（结果%lf）。
【6】（数值取绝对值问题）忽略负号是应该取绝对值，但对于初学者可能有些还不会，比如还没学到函数
那么可以有个最简单的语句
if(a<0)
a*=-1; //a*=-1相当于a=a*-1
如果a<0，就把a乘一个-1

开方t：sqrt（t）;

fabs（变量）函数是一个bai求绝对值du的函数，求出x的绝对值，和数学上的概念相同，, 当x不为负时返回 x，否则返回 -x。
【7】
编译时替换：（#define TAXRATE 0.015）也称明示常量（其中没有=符号）
编译程序时，程序中所有TAXRATE 都会被替换成0.015。
另：
#define 指令还可以定义字符和字符串常量，前者使用单引号，后者使用双引号。如：
#define BEEP ‘\a’
#define TEE   'T’
#define ESC ‘\033’
#define OOPS"Now you have done it!"
【8】
const限定符
const int MONTHS = 12;//MONTHS 在程序中不可更改，值为12。
【9】
一：若两种类型的字节数不同，转换成字节数大的类型；若两种字节数相同，且一种有符号一种没符号，则转换成无符号类型。
二：在赋值运算中，赋值号两边量的数据类型不同时，赋值号右边的类型将转换为左边的类型，如果右边变量的数据类型长度比左边长时，将丢失一部分数据，这样会降低精度，丢失的部分按四舍五入向前舍入。

【10】
当输入格式为1234，同时要求程序输出结果为a=12,b=34应当如何修改？
scanf("%2d%2d",&a,&b);   [可以自动按照指定宽度从输入的数据中截取所需要的数据]。
\"  是转义字符，代表双引号字符 如：printf("a = \"%d\",b = \"%d\"\n",a,b);
【11】
使用户使用任意字符作为分隔符输入数据，则程序应该如何修改？
      scanf("%d%*c%d", &a, &b);
当语句修改成如下语句时，如果用户输入123456，那么程序运行结果如何？
   scanf("%2d%*2d%2d",&a,&b);
输出：
    a = 12,b = 56
其中，格式说明符%*2d中的*为忽略输入修饰符，表示对应的输入项（这里为34）在读入后不赋予给相应的变量，%2d中的2为域宽附加格式说明，表示从数据中按指定宽度2从输入缓冲区中截取输入数据。
 
【12】
        int r，year;
        r=scanf("%d",&year);/*若此时输入的值属于int型，则是成功输入一个数据，此时r=1，若输入数据不是int型(输入了a)，则输入数据失败，此时r=0。即r的作用是判断输入数据成功数量*/

【13】
26位字母排序问题：
//a的ASCll码排在26字符最前面，因此，【26字母排序(序号)=字符-'a'(97)+1】
//注：字符与数字相加减等价于字符ASCll码与数字相加减
【14】
C语言中实现四舍五入: 
(int)(a+0.5)即可。 
很巧妙的用了取整规则。 
也不用导入math.h 
同样注意负数的情况。 
把 + 换成 - 即可。

float f = …..; 
int i = (int)(f + 0.5); 
i就是f四舍五入的结果。

今天我要介绍在C语言中实现数据四舍五入的算法。 
我们知道，C语言中去除小数位采用的方法就是强制性转化成整型类型。那么假如我们要对一个小数保留三个小数位而第四个小数位按照四舍五入的规则进行， 
该怎样实现呢？很简单，我们将数字扩大1000倍，使得第四位小数称为新数字的第一位，然后我们可以给它加上0.5后再进行强制性转化。加0.5的原因就是： 
假如这个小数位的数值大于5，加上0.5能够实现进位的作用，倘若小于0.5，就没有实现进位的作用。如此，就能实现小数位的四舍五入。然后我们再对这个数值 
进行强制性转化，然后再处以1000.0(记住，一定要1000.0，否则就会出现隐式转化)，在输出的时候用%0.3f以实现保留三位小数。

# include <stdio.h>
int main(void) {
    float a;
    scanf("%f", &a);
    a = (int)(a*1000+0.5)/1000.0;
    printf("%0.3f", a);
    return 0;
}
1
2
3
4
5
6
7
8
有一个round函数可以直接调用， 
round(x) 
参数时double型，返回小数对整数部分的四舍五入值 
比如 round(3.623); 返回4

C语言中保留两位小数:小技巧 
① 
float a = 3.456; //保留到小数点后两位 
float b =(int)((a * 100) + 0.5) / 100.0; 
输出结果为3.46 
精度比较高 
② 
float a = 23.456789;

printf(“%.2f”,a); //输出为23.45

#include"stdio.h"
#include"math.h"
void main()
{
float x;
scanf("%f",&x);
int y = round(x);
printf("%d",y);
}

